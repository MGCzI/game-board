[{"/home/mgcz/game-board/client/src/index.tsx":"1","/home/mgcz/game-board/client/src/reportWebVitals.ts":"2","/home/mgcz/game-board/client/src/App.tsx":"3","/home/mgcz/game-board/client/src/registration.tsx":"4"},{"size":554,"mtime":1658846205928,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1658846205928,"results":"7","hashOfConfig":"6"},{"size":348,"mtime":1658926639197,"results":"8","hashOfConfig":"6"},{"size":3533,"mtime":1658927457057,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"nmnsq",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/mgcz/game-board/client/src/index.tsx",[],[],[],"/home/mgcz/game-board/client/src/reportWebVitals.ts",[],[],"/home/mgcz/game-board/client/src/App.tsx",["24"],[],"/home/mgcz/game-board/client/src/registration.tsx",["25"],[],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Registration.css\";\nimport validator from \"validator\";\n\ninterface RegistrationInputs {\n    name: string;\n    surname: string;\n    email: string;\n    password: string;\n}\n\nconst initReg: RegistrationInputs = {\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    password: \"\",\n};\n\nconst optionValidatorEmpty = { ignore_whitespace: false };\n\nexport default function Registration() {\n    const [inputsValues, setInputsValues] =\n        useState<RegistrationInputs>(initReg);\n    const [error, setError] = useState<boolean>(false);\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setInputsValues({\n            ...inputsValues,\n            [event.target.name]: event.target.value.trim(),\n        });\n    }\n\n    async function handleSubmit() {\n        console.log(\"Handle the submit, inputsValues:\", inputsValues);\n\n        // Lets Valid the input before sending them to the server.\n        if (\n            !validator.isEmail(inputsValues.email) ||\n            validator.isEmpty(inputsValues.name, optionValidatorEmpty) ||\n            validator.isEmpty(inputsValues.surname, optionValidatorEmpty) ||\n            validator.isEmpty(inputsValues.password, optionValidatorEmpty)\n        ) {\n            console.log(\"Error\");\n\n            setError(true);\n        } else {\n            console.log(\"All inputs are valid\");\n\n            try {\n                const resp = await fetch(\"/api/registration\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(inputsValues),\n                });\n\n                const data = await resp.json();\n\n                if (data.status === \"Success\") {\n                    // location.replace(\"/\");\n                    // location.reload();\n                } else {\n                    setError(true);\n                }\n            } catch {\n                setError(true);\n            }\n        }\n    }\n\n    return (\n        <>\n            <div>registration</div>\n            <div className=\"form\">\n                <h1>Join our community</h1>\n\n                <p>\n                    Registration ||\n                    {/* <Link to=\"/login\"> Log in </Link> */}\n                </p>\n                <div className=\"error\">\n                    {error && <p>oops, something went wrong</p>}\n                </div>\n\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    onChange={handleChange}\n                    required\n                ></input>\n                <input\n                    type=\"text\"\n                    name=\"surname\"\n                    placeholder=\"Surname\"\n                    onChange={handleChange}\n                    required\n                ></input>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email@email.com\"\n                    onChange={handleChange}\n                    required\n                ></input>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={handleChange}\n                    required\n                ></input>\n                <button onClick={handleSubmit}>Submit</button>\n            </div>\n        </>\n    );\n}\n",{"ruleId":"26","severity":1,"message":"27","line":1,"column":17,"nodeType":"28","messageId":"29","endLine":1,"endColumn":26},{"ruleId":"26","severity":1,"message":"30","line":2,"column":10,"nodeType":"28","messageId":"29","endLine":2,"endColumn":14},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used."]